
version: '3.7'

services:
  web:
    build:
      context: .
      network: host
      dockerfile: Dockerfile
    container_name: web
    image: web:lastest
    environment:
      - PRODUCTION=true
    command: sh -c "
      gunicorn config.wsgi -b 0.0.0.0:8000
      && python manage.py collectstatic
      && python manage.py migrate"
    restart: on-failure
    ports:
    - "8000:8000"
    env_file:
      - .env
    networks:
      - app
    depends_on:
      - db
    volumes:
      - .:/django/
      - static_files:/django/static
      - media_files:/django/media

  celery:
    build: .
    restart: on-failure
    command: celery -A config worker -l INFO
    volumes:
      - .:/django
    environment:
      - PRODUCTION=true
    networks:
      - app
    depends_on:
      - web
      - redis

  redis:
    image: redis
    container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      - app
      
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=movie
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app

  nginx:
    image: nginx
    command: nginx -g 'daemon off;'
    volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    - static_files:/django/static/
    - media_files:/django/media/
    networks:
      - app
    ports:
      - "8080:80"

networks:
  app:

volumes:
  static_files:
  media_files: